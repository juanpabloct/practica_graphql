generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generate 
generator nestgraphql {
  provider               = "prisma-nestjs-graphql"
  output                 = "../src/@generated/prisma-nestjs-graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

//Models person

model User {
  id         Int          @id @default(autoincrement())
  /// @Validator.IsEmail()
  email      String       @unique
  /// @Validator.IsString()
  /// @Validator.MinLength(7)
  password   String
  /// @Validator.IsOptional()
  active     Boolean      @default(false)
  RolAnduser RolAnduser[]
}

model Rol {
  id               Int             @id @default(autoincrement())
  /// @Validator.MinLength(1)
  name             String          @unique
  RolesAndPermisos RolAndPermiso[]
}

model RolAndPermiso {
  id         Int          @id @default(autoincrement())
  Rol        Rol?         @relation(fields: [fkRol], references: [id])
  ///@Validator.IsNumber()
  fkRol      Int?
  ///@Validator.IsNumber()
  permisoId  Int?
  Permiso    Permiso?     @relation(fields: [permisoId], references: [id])
  RolAnduser RolAnduser[]
}

model Permiso {
  id               Int             @id @default(autoincrement())
  /// @Validator.MinLength(3)
  /// @Validator.IsString()
  name             String          @unique
  RolesAndPermisos RolAndPermiso[]
}

model RolAnduser {
  id              Int            @id @default(autoincrement())
  User            User?          @relation(fields: [fkUser], references: [id])
  fkUser          Int?
  RolAndPermiso   RolAndPermiso? @relation(fields: [rolAndPermisoId], references: [id])
  rolAndPermisoId Int?
}

//Models product Store and Bodega

model Productos {
  idProducto   Int                    @id @unique @default(autoincrement())
  /// @Validator.MinLength(3)
  /// @Validator.IsString()
  name         String                 @unique
  /// @Validator.IsNumber()
  precio       Int
  BodegaTienda BodegaTiendaProducto[]
}

model Tienda {
  id           Int                    @id @unique @default(autoincrement())
  /// @Validator.MinLength(3)
  /// @Validator.IsString()
  name         String                 @unique
  BodegaTienda BodegaTiendaProducto[]
}

model Bodega {
  id           Int                    @id @unique @default(autoincrement())
  /// @Validator.MinLength(3)
  /// @Validator.IsString()
  name         String                 @unique @default(cuid())
  BodegaTienda BodegaTiendaProducto[]
}

model BodegaTiendaProducto {
  id         Int       @id @unique @default(autoincrement())
  fkProducto Int
  fkTienda   Int
  cantidad   Int       @default(0)
  producto   Productos @relation(fields: [fkProducto], references: [idProducto])
  tienda     Tienda    @relation(fields: [fkTienda], references: [id])
  Bodega     Bodega?   @relation(fields: [bodegaId], references: [id])
  bodegaId   Int?
}

model Facturas {
  id   Int    @id @default(autoincrement())
  name String
}
